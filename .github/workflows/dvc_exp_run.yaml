name: run-my-experiment
on: [pull_request]
jobs:
  # deploy-runner:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: iterative/setup-cml@v1
  #     - uses: actions/checkout@v2
  #     - name: Deploy self-hosted runner on GCP
  #       env:
  #         REPO_TOKEN: ${{ secrets.PAT }}
  #         GOOGLE_APPLICATION_CREDENTIALS_DATA: '${{ secrets.GOOGLE_CREDENTIALS }}'
  #       run: |
  #         cml runner \
  #             --cloud=gcp \
  #             --cloud-region=us-central1-a \
  #             --cloud-type=e2-medium \
  #             --labels=my-gcp-runner
  dvc_exp_run:
    # needs: deploy-runner
    # runs-on: [self-hosted, my-gcp-runner]
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      id-token: 'write'
    container:
      image: docker://iterativeai/cml:0-dvc2-base1
    steps:
    - uses: actions/checkout@v2
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Run experiment
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "At point 0"
        # gcloud auth application-default login --quiet
        echo "At point 1"
        pip install -r requirements.txt
        echo "At point 2"
        dvc pull
        echo "At point 3"
        find data_archive.zip
        echo "At point 4"
        dvc repro
        echo "At point 5"
    - name: Commit files
      id: commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions"
        git add --all
        if [-z "$(git status --porcelain)"]; then
          echo "::set-output name=push::false"
        else
          git commit -m "Results of the last experiment" -a
          echo "::set-output name=push::true"
        fi
        git push origin ${{ github.head_ref }}
      shell: bash
    # - name: Push changes
    #   if: steps.commit.outputs.push == 'true'
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branch: ${{ github.head_ref }}